<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" 
             x:Class="Bubbles_Projeto.App"
             >
    <Application.Resources>
        
    	<Style x:Key="HyperlinkButtonStyle1" TargetType="HyperlinkButton">
    		<Setter Property="Foreground" Value="#FF73A9D8"/>
    		<Setter Property="Padding" Value="2,0,2,0"/>
    		<Setter Property="Cursor" Value="Hand"/>
    		<Setter Property="HorizontalContentAlignment" Value="Left"/>
    		<Setter Property="VerticalContentAlignment" Value="Top"/>
    		<Setter Property="Background" Value="Transparent"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="HyperlinkButton">
    					<Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
    											<DiscreteObjectKeyFrame KeyTime="0">
    												<DiscreteObjectKeyFrame.Value>
    													<Visibility>Visible</Visibility>
    												</DiscreteObjectKeyFrame.Value>
    											</DiscreteObjectKeyFrame>
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Pressed">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
    											<DiscreteObjectKeyFrame KeyTime="0">
    												<DiscreteObjectKeyFrame.Value>
    													<Visibility>Visible</Visibility>
    												</DiscreteObjectKeyFrame.Value>
    											</DiscreteObjectKeyFrame>
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
    											<DiscreteObjectKeyFrame KeyTime="0">
    												<DiscreteObjectKeyFrame.Value>
    													<Visibility>Visible</Visibility>
    												</DiscreteObjectKeyFrame.Value>
    											</DiscreteObjectKeyFrame>
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="FocusStates">
    								<VisualState x:Name="Focused">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Unfocused"/>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<TextBlock x:Name="UnderlineTextBlock" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    						<TextBlock x:Name="DisabledOverlay" Foreground="#FFAAAAAA" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
    						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    						<Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1"/>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="TextBlockStyle1" TargetType="TextBlock">
    		<Setter Property="Foreground" Value="Black"/>
    		<Setter Property="Margin" Value="0"/>
    		<Setter Property="Effect">
    			<Setter.Value>
    				<DropShadowEffect BlurRadius="5" ShadowDepth="5"/>
    			</Setter.Value>
    		</Setter>
    	</Style>
        
    	<ControlTemplate x:Key="ValidationToolTipTemplate">
    		<Grid x:Name="Root" RenderTransformOrigin="0,0" Opacity="0" Margin="5,0">
    			<VisualStateManager.VisualStateGroups>
    				<VisualStateGroup x:Name="OpenStates">
    					<VisualStateGroup.Transitions>
    						<VisualTransition GeneratedDuration="0"/>
    						<VisualTransition GeneratedDuration="0:0:0.2" To="Open">
    							<Storyboard>
    								<DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
    									<DoubleAnimation.EasingFunction>
    										<BackEase Amplitude=".3" EasingMode="EaseOut"/>
    									</DoubleAnimation.EasingFunction>
    								</DoubleAnimation>
    								<DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
    							</Storyboard>
    						</VisualTransition>
    					</VisualStateGroup.Transitions>
    					<VisualState x:Name="Closed">
    						<Storyboard>
    							<DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
    						</Storyboard>
    					</VisualState>
    					<VisualState x:Name="Open">
    						<Storyboard>
    							<DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0"/>
    							<DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
    						</Storyboard>
    					</VisualState>
    				</VisualStateGroup>
    			</VisualStateManager.VisualStateGroups>
    			<Grid.RenderTransform>
    				<TranslateTransform x:Name="xform" X="-25"/>
    			</Grid.RenderTransform>
    			<Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
    			<Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
    			<Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
    			<Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
    			<Border Background="#FFDC000C" CornerRadius="2"/>
    			<Border CornerRadius="2">
    				<TextBlock UseLayoutRounding="false" Text="{Binding (Validation.Errors)[0].ErrorContent}" TextWrapping="Wrap" Margin="8,4,8,4" MaxWidth="250" Foreground="White"/>
    			</Border>
    		</Grid>
    	</ControlTemplate>
    	<Style x:Key="TextBoxStyle1" TargetType="TextBox">
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="Background" Value="#FFFFFFFF"/>
    		<Setter Property="Foreground" Value="#FF000000"/>
    		<Setter Property="Padding" Value="2"/>
    		<Setter Property="BorderBrush">
    			<Setter.Value>
    				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    					<GradientStop Color="#FFA3AEB9" Offset="0"/>
    					<GradientStop Color="#FF8399A9" Offset="0.375"/>
    					<GradientStop Color="#FF718597" Offset="0.375"/>
    					<GradientStop Color="#FF617584" Offset="1"/>
    				</LinearGradientBrush>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="TextBox">
    					<Grid x:Name="RootElement">
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver">
    									<Storyboard>
    										<ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="MouseOverBorder"/>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="ReadOnly">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement"/>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="FocusStates">
    								<VisualState x:Name="Focused">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Unfocused">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="ValidationStates">
    								<VisualState x:Name="Valid"/>
    								<VisualState x:Name="InvalidUnfocused">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
    											<DiscreteObjectKeyFrame KeyTime="0">
    												<DiscreteObjectKeyFrame.Value>
    													<Visibility>Visible</Visibility>
    												</DiscreteObjectKeyFrame.Value>
    											</DiscreteObjectKeyFrame>
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="InvalidFocused">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
    											<DiscreteObjectKeyFrame KeyTime="0">
    												<DiscreteObjectKeyFrame.Value>
    													<Visibility>Visible</Visibility>
    												</DiscreteObjectKeyFrame.Value>
    											</DiscreteObjectKeyFrame>
    										</ObjectAnimationUsingKeyFrames>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
    											<DiscreteObjectKeyFrame KeyTime="0">
    												<DiscreteObjectKeyFrame.Value>
    													<System:Boolean>True</System:Boolean>
    												</DiscreteObjectKeyFrame.Value>
    											</DiscreteObjectKeyFrame>
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Opacity="1" CornerRadius="30">
    							<Grid>
    								<Border x:Name="ReadOnlyVisualElement" Background="#5EC9C9C9" Opacity="0"/>
    								<Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
    									<ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}"/>
    								</Border>
    								<ed:RegularPolygon Fill="#FFFBCE04" HorizontalAlignment="Left" Height="94" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="Black" UseLayoutRounding="False" VerticalAlignment="Top" Width="117" Margin="24.671,-93.508,0,0" RenderTransformOrigin="0.5,0.5" StrokeThickness="0">
    									<ed:RegularPolygon.RenderTransform>
    										<CompositeTransform Rotation="0.122"/>
    									</ed:RegularPolygon.RenderTransform>
    								</ed:RegularPolygon>
    								<ed:RegularPolygon Fill="#FFFBCE04" HorizontalAlignment="Left" Height="94.012" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="Black" UseLayoutRounding="False" VerticalAlignment="Top" Width="117" Margin="26.471,96.492,0,-102.504" RenderTransformOrigin="0.5,0.5" StrokeThickness="0">
    									<ed:RegularPolygon.RenderTransform>
    										<CompositeTransform Rotation="0.122" ScaleY="-1"/>
    									</ed:RegularPolygon.RenderTransform>
    								</ed:RegularPolygon>
    							</Grid>
    						</Border>
    						<Border x:Name="DisabledVisualElement" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Background="#A5F7F7F7" IsHitTestVisible="False" Opacity="0"/>
    						<Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
    						<Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
    							<ToolTipService.ToolTip>
    								<ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
    									<ToolTip.Triggers>
    										<EventTrigger RoutedEvent="Canvas.Loaded">
    											<BeginStoryboard>
    												<Storyboard>
    													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
    														<DiscreteObjectKeyFrame KeyTime="0">
    															<DiscreteObjectKeyFrame.Value>
    																<System:Boolean>true</System:Boolean>
    															</DiscreteObjectKeyFrame.Value>
    														</DiscreteObjectKeyFrame>
    													</ObjectAnimationUsingKeyFrames>
    												</Storyboard>
    											</BeginStoryboard>
    										</EventTrigger>
    									</ToolTip.Triggers>
    								</ToolTip>
    							</ToolTipService.ToolTip>
    							<Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
    								<Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
    								<Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
    							</Grid>
    						</Border>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<ControlTemplate x:Key="TextBoxTemplateT" TargetType="TextBox">
    		<Grid>
    			<ed:RegularPolygon Fill="#FF2300FF" HorizontalAlignment="Left" Height="100" InnerRadius="1" PointCount="3" Stretch="Fill" Stroke="Black" StrokeThickness="3" UseLayoutRounding="False" VerticalAlignment="Top" Width="150" Margin="10,-100.336,0,0"/>
    			<ed:RegularPolygon Fill="#FF02FF19" HorizontalAlignment="Left" Height="100" InnerRadius="1" Margin="10,100,0,-100" PointCount="3" Stretch="Fill" Stroke="Black" StrokeThickness="3" UseLayoutRounding="False" VerticalAlignment="Top" Width="150" RenderTransformOrigin="0.5,0.5">
    				<ed:RegularPolygon.RenderTransform>
    					<CompositeTransform ScaleY="-1"/>
    				</ed:RegularPolygon.RenderTransform>
    			</ed:RegularPolygon>
    			<Border BorderThickness="5" HorizontalAlignment="Left" Height="100" VerticalAlignment="Top" Width="170" CornerRadius="10">
    				<Border.BorderBrush>
    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    						<GradientStop Color="#FF2300FF" Offset="0"/>
    						<GradientStop Color="#FF02FF19" Offset="1"/>
    						<GradientStop Color="#FF06B0F0" Offset="0.5"/>
    					</LinearGradientBrush>
    				</Border.BorderBrush>
    				<Border.Background>
    					<SolidColorBrush Color="Black" Opacity="0"/>
    				</Border.Background>
    				<TextBox TextWrapping="Wrap" BorderBrush="{x:Null}" IsReadOnly="True">
    					<TextBox.Background>
    						<SolidColorBrush Color="White" Opacity="0"/>
    					</TextBox.Background>
    				</TextBox>
    			</Border>
    		</Grid>
    	</ControlTemplate>
        
    </Application.Resources>
</Application>
